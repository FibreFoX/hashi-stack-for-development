# -*- mode: ruby -*-
# vi: set ft=ruby :

unless Vagrant.has_plugin?("vagrant-scp")
  raise 'Vagrant plugin "vagrant-scp" is not installed! Have you executed "vagrant plugin install vagrant-scp"?'
end

Vagrant.configure("2") do |config|
  config.vm.box = "proxmox"
  
  # otherwise you will get nagged about SMB-login credentials when "vagrant up"
  config.vm.synced_folder ".", "/vagrant", disabled: true

  config.vm.provider "hyperv" do |h|
      h.enable_virtualization_extensions = true
      h.linked_clone = true
      # there will be a lot of things running, give it some space
      h.memory = 4096
      h.cpus = 4
  end

  # some required "corrections" to make the system usable
  config.vm.provision "shell", inline: <<-SHELL
    # remove last line, as it is not correct for this new VM
    head -n -1 /etc/hosts | tee /etc/hosts > /dev/null
    # add "current" correct host entry
    echo "$(hostname -I | cut -f1 -d' ') $(hostname -s) $(hostname)" | tee -a /etc/hosts > /dev/null
    
    export ROOT_PWD=development

    # set a known root password for PVE login later
    # https://arkit.co.in/four-ways-non-interactively-set-passwords-linux/
    echo -e "${ROOT_PWD}\n${ROOT_PWD}" | passwd root
    
    # prepare a configuration file to be used with Terraform
    # DO NOT USE THIS IN PRODUCTION !!!
    # DO NOT USE THIS IN PRODUCTION !!!
    # DO NOT USE THIS IN PRODUCTION !!!
    # it is a "lazy" workaround to not have so much configured
    echo "pm_api_url = \"http://$(hostname -I | cut -f1 -d' '):8006/api2/json\"" | tee /home/vagrant/proxmox.tfvars > /dev/null
    echo "pm_user = \"root@pam\"" | tee -a /home/vagrant/proxmox.tfvars > /dev/null
    echo "pm_password = \"${ROOT_PWD}\"" | tee -a /home/vagrant/proxmox.tfvars > /dev/null
  SHELL
end
